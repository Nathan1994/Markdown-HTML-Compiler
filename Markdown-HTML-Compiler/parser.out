Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> body
Rule 1     body -> statement
Rule 2     statement -> expression
Rule 3     statement -> statement CR expression
Rule 4     expression -> H1 factor
Rule 5     expression -> H2 factor
Rule 6     expression -> H3 factor
Rule 7     expression -> factor
Rule 8     factor -> factor STRONG term STRONG term
Rule 9     factor -> factor EM term EM term
Rule 10    factor -> term
Rule 11    term -> TEXT

Terminals, with rules where they appear

CR                   : 3
EM                   : 9 9
H1                   : 4
H2                   : 5
H3                   : 6
STRONG               : 8 8
TEXT                 : 11
error                : 

Nonterminals, with rules where they appear

body                 : 0
expression           : 2 3
factor               : 4 5 6 7 8 9
statement            : 1 3
term                 : 8 8 9 9 10

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . statement
    (2) statement -> . expression
    (3) statement -> . statement CR expression
    (4) expression -> . H1 factor
    (5) expression -> . H2 factor
    (6) expression -> . H3 factor
    (7) expression -> . factor
    (8) factor -> . factor STRONG term STRONG term
    (9) factor -> . factor EM term EM term
    (10) factor -> . term
    (11) term -> . TEXT

    H1              shift and go to state 5
    H2              shift and go to state 3
    H3              shift and go to state 4
    TEXT            shift and go to state 6

    body                           shift and go to state 1
    term                           shift and go to state 2
    expression                     shift and go to state 9
    statement                      shift and go to state 7
    factor                         shift and go to state 8

state 1

    (0) S' -> body .



state 2

    (10) factor -> term .

    STRONG          reduce using rule 10 (factor -> term .)
    EM              reduce using rule 10 (factor -> term .)
    CR              reduce using rule 10 (factor -> term .)
    $end            reduce using rule 10 (factor -> term .)


state 3

    (5) expression -> H2 . factor
    (8) factor -> . factor STRONG term STRONG term
    (9) factor -> . factor EM term EM term
    (10) factor -> . term
    (11) term -> . TEXT

    TEXT            shift and go to state 6

    term                           shift and go to state 2
    factor                         shift and go to state 10

state 4

    (6) expression -> H3 . factor
    (8) factor -> . factor STRONG term STRONG term
    (9) factor -> . factor EM term EM term
    (10) factor -> . term
    (11) term -> . TEXT

    TEXT            shift and go to state 6

    term                           shift and go to state 2
    factor                         shift and go to state 11

state 5

    (4) expression -> H1 . factor
    (8) factor -> . factor STRONG term STRONG term
    (9) factor -> . factor EM term EM term
    (10) factor -> . term
    (11) term -> . TEXT

    TEXT            shift and go to state 6

    term                           shift and go to state 2
    factor                         shift and go to state 12

state 6

    (11) term -> TEXT .

    STRONG          reduce using rule 11 (term -> TEXT .)
    EM              reduce using rule 11 (term -> TEXT .)
    CR              reduce using rule 11 (term -> TEXT .)
    $end            reduce using rule 11 (term -> TEXT .)


state 7

    (1) body -> statement .
    (3) statement -> statement . CR expression

    $end            reduce using rule 1 (body -> statement .)
    CR              shift and go to state 13


state 8

    (7) expression -> factor .
    (8) factor -> factor . STRONG term STRONG term
    (9) factor -> factor . EM term EM term

    CR              reduce using rule 7 (expression -> factor .)
    $end            reduce using rule 7 (expression -> factor .)
    STRONG          shift and go to state 15
    EM              shift and go to state 14


state 9

    (2) statement -> expression .

    CR              reduce using rule 2 (statement -> expression .)
    $end            reduce using rule 2 (statement -> expression .)


state 10

    (5) expression -> H2 factor .
    (8) factor -> factor . STRONG term STRONG term
    (9) factor -> factor . EM term EM term

    CR              reduce using rule 5 (expression -> H2 factor .)
    $end            reduce using rule 5 (expression -> H2 factor .)
    STRONG          shift and go to state 15
    EM              shift and go to state 14


state 11

    (6) expression -> H3 factor .
    (8) factor -> factor . STRONG term STRONG term
    (9) factor -> factor . EM term EM term

    CR              reduce using rule 6 (expression -> H3 factor .)
    $end            reduce using rule 6 (expression -> H3 factor .)
    STRONG          shift and go to state 15
    EM              shift and go to state 14


state 12

    (4) expression -> H1 factor .
    (8) factor -> factor . STRONG term STRONG term
    (9) factor -> factor . EM term EM term

    CR              reduce using rule 4 (expression -> H1 factor .)
    $end            reduce using rule 4 (expression -> H1 factor .)
    STRONG          shift and go to state 15
    EM              shift and go to state 14


state 13

    (3) statement -> statement CR . expression
    (4) expression -> . H1 factor
    (5) expression -> . H2 factor
    (6) expression -> . H3 factor
    (7) expression -> . factor
    (8) factor -> . factor STRONG term STRONG term
    (9) factor -> . factor EM term EM term
    (10) factor -> . term
    (11) term -> . TEXT

    H1              shift and go to state 5
    H2              shift and go to state 3
    H3              shift and go to state 4
    TEXT            shift and go to state 6

    term                           shift and go to state 2
    expression                     shift and go to state 16
    factor                         shift and go to state 8

state 14

    (9) factor -> factor EM . term EM term
    (11) term -> . TEXT

    TEXT            shift and go to state 6

    term                           shift and go to state 17

state 15

    (8) factor -> factor STRONG . term STRONG term
    (11) term -> . TEXT

    TEXT            shift and go to state 6

    term                           shift and go to state 18

state 16

    (3) statement -> statement CR expression .

    CR              reduce using rule 3 (statement -> statement CR expression .)
    $end            reduce using rule 3 (statement -> statement CR expression .)


state 17

    (9) factor -> factor EM term . EM term

    EM              shift and go to state 19


state 18

    (8) factor -> factor STRONG term . STRONG term

    STRONG          shift and go to state 20


state 19

    (9) factor -> factor EM term EM . term
    (11) term -> . TEXT

    TEXT            shift and go to state 6

    term                           shift and go to state 21

state 20

    (8) factor -> factor STRONG term STRONG . term
    (11) term -> . TEXT

    TEXT            shift and go to state 6

    term                           shift and go to state 22

state 21

    (9) factor -> factor EM term EM term .

    STRONG          reduce using rule 9 (factor -> factor EM term EM term .)
    EM              reduce using rule 9 (factor -> factor EM term EM term .)
    CR              reduce using rule 9 (factor -> factor EM term EM term .)
    $end            reduce using rule 9 (factor -> factor EM term EM term .)


state 22

    (8) factor -> factor STRONG term STRONG term .

    STRONG          reduce using rule 8 (factor -> factor STRONG term STRONG term .)
    EM              reduce using rule 8 (factor -> factor STRONG term STRONG term .)
    CR              reduce using rule 8 (factor -> factor STRONG term STRONG term .)
    $end            reduce using rule 8 (factor -> factor STRONG term STRONG term .)

